// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id        Int        @id @default(autoincrement())
  title     String
  content   String
  avatar    String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  published Boolean    @default(false)
  userId    Int
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  categories  Category[]

  @@map("posts")
}

model Category {
  id          Int           @id @default(autoincrement())
  name        String
  postId      Int
  post        Post          @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  subcategories Subcategory[]

  @@map("categories")
}

model Subcategory {
  id         Int      @id @default(autoincrement())
  name       String
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("subcategories")
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String
  password String
  role     ROLE   @default(USER)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts     Post[]
  profile   Profile?

  @@map("users")
}

model Profile {
  id        Int      @id @default(autoincrement())
  country   String
  location  String
  age       String
  avatar    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int      @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("profiles")
}

enum ROLE {
  USER
  ADMIN
}
